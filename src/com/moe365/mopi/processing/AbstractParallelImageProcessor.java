package com.moe365.mopi.processing;

import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicReference;
import java.util.function.BiFunction;
import java.util.function.Consumer;

import au.edu.jcu.v4l4j.VideoFrame;

/**
 * An abstract image processor. This class is designed for reducing bottlenecks in the image pipeline,
 * for example, allowing decoding operations to run in parallel, asynchronously with other operations (like
 * pair comparison operations).
 * @author mailmindlin
 * @param <R> the result type generated by this processor
 * @since April 2017
 */
public abstract class AbstractParallelImageProcessor<R> implements ImageProcessor<R> {
	protected ExecutorService executor;
	
	protected BiFunction<VideoFrame, ByteBuffer, Callable<Pair<VideoFrame, ByteBuffer>> decoderFactory;
}
